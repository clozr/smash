upstream app_server {
    #server unix:/tmp/gunicorn.sock fail_timeout=0;
    # For a TCP configuration:
    server localhost:9000 fail_timeout=0;
}
upstream blog_server {
    # For a TCP configuration:
    server localhost:2368 fail_timeout=0;
}

upstream socketio_servers {
    server localhost:9050/socket.io fail_timeout=10s;
}

server {
    listen 80 default;
    server_name www.{{domain}};
    keepalive_timeout 5;

    # PROXY PASS
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_redirect off;
    #proxy_set_header Request-URI $request-uri;

    # path for static files
    root {{doc_root}};

    location / {
        proxy_pass   http://app_server;
    }
    
    location /media {
        # checks for static file, if not found proxy to app
        root {{doc_root}};
        #try_files $uri
    }
  
    location /accounts {
      return 301 https://$host$uri;
    }

    location /mbox {
      return 301 https://$host$uri;
    }

    location /socket.io {
      return 301 https://$host$uri;
    }

    location /s {
      return 301 https://$host$uri;
    }

    location @proxy_to_app {
      proxy_pass   http://app_server;
    }

    location /blogs {
    	#rewrite ^/blogs(.*)$ /$1 break;
        proxy_pass   http://blog_server;
    }


    error_page 500 502 503 504 /m/500.html;
}

server {
    listen 443 ssl default;
    server_name www.{{domain}};

    keepalive_timeout 5;

    # PROXY PASS
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_redirect off;
    #proxy_set_header Request-URI $request-uri;

    # SSL
    ssl on;
    ssl_certificate  {{ssl_dir}}/{{domain}}.crt;
    ssl_certificate_key {{ssl_dir}}/{{domain}}.key;
    # for POODLE vulnerability
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # LOCATION
    root {{doc_root}};

    location / {
        proxy_pass   http://app_server;
    }

    location /media {
        # checks for static file, if not found proxy to app
        root {{doc_root}};
    }

    location /media/js/app_data {
      proxy_pass   http://app_server;
    }

    location @proxy_to_app {
      proxy_pass   http://app_server;
    }

    location /blogs {
    	#rewrite ^/blogs(.*)$ /$1 break;
        proxy_pass   http://blog_server;
    }

    location /socket.io {
      proxy_pass http://socketio_servers;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
    
    # ERROR
    error_page 500 502 503 504 /m/500.html;
}

